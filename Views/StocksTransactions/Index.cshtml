@model IEnumerable<TradingPub.Models.StocksTransaction>

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between">
    <h2>Stocks Transactions</h2>
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <div class="form-inline">
                <div class="px-2"><input class="form-control" type="text" name="SearchString" placeholder="Find by Trader" value="@ViewData["CurrentFilter"]" /></div>
                <input type="submit" value="Search" class="btn btn-primary" />
                <div class="px-1"><a class="btn btn-danger" asp-action="Index">Back</a></div>
            </div>
        </div>
    </form>
</div>

<table class="table table-borderless shadow rounded" style="width:100%">
    <thead class="text-light" style="background: #1E2830">
        <tr>
            <td style="font-size: 21px; font-weight: bold" align="center">
                <a class="text-light" asp-action="Index" asp-route-sortOrder="@ViewData["TraderSortParm"]">@Html.DisplayNameFor(model => model.Trader)</a>
            </td>
            <td style="font-size: 21px; font-weight:bold" align="center">
                <a class="text-light" asp-action="Index" asp-route-sortOrder="@ViewData["StockSortParm"]">@Html.DisplayNameFor(model => model.Stocks)</a>
            </td>
            <td style="font-size: 21px; font-weight:bold" align="center">
                <a class="text-light" asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">@Html.DisplayNameFor(model => model.Stocks.Price)</a>
            </td>
            <td style="font-size: 21px; font-weight:bold" align="center">
                <a class="text-light" asp-action="Index" asp-route-sortOrder="@ViewData["ResultSortParm"]">@Html.DisplayNameFor(model => model.StockResult)</a>
            </td>
            <td style="font-size: 21px; font-weight:bold" align="center">
                <a class="text-light" asp-action="Index" asp-route-sortOrder="@ViewData["AmountSortParm"]">@Html.DisplayNameFor(model => model.StockAmount)</a>
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td align="center" class="align-middle">
                @Html.DisplayFor(modelItem => item.Trader.Name)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.Stocks.Name)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.Stocks.Price)
            </td>
            @if (item.StockResult == "Loss")
            {
                <td align="center" style="color: red">
                    @Html.DisplayFor(modelItem => item.StockResult)
                </td>
            }
            else if (item.StockResult == "Win")
            {
                <td align="center" style="color: green">
                    @Html.DisplayFor(modelItem => item.StockResult)
                </td>
            }
            @if (item.StockAmount <= 0)
            {
                <td align="center" style="color: red">
                    @Html.DisplayFor(modelItem => item.StockAmount)
                </td>
            }
            else if (item.StockAmount >= 0)
            {
                <td align="center" style="color: green">
                    @Html.DisplayFor(modelItem => item.StockAmount)
                </td>
            }
        </tr>
        }
    </tbody>
</table>

<input type="button" class="btn btn-danger" value="Back" onclick="window.location= '@Url.Action( "Index", "CryptoTransactions")'" />
